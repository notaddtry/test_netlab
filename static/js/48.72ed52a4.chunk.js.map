{"version":3,"file":"static/js/48.72ed52a4.chunk.js","mappings":"uPAiHA,EAtGa,WACX,OAOIA,EAAAA,EAAAA,IAAmB,CACrBC,cAAe,CACbC,WAAOC,KARTC,EADF,EACEA,SADF,IAEEC,UAAaC,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,YACrBC,EAHF,EAGEA,UACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,MACAC,EANF,EAMEA,QAOF,GAAwBC,EAAAA,EAAAA,UAAgB,CACtCC,MAAO,KACPC,UAAW,KACXZ,MAAO,CAAEa,MAAO,KAAMC,MAAO,MAC7BC,QAAS,OAJX,eAAOC,EAAP,KAAaC,EAAb,KAOMC,GAAWC,EAAAA,EAAAA,QAAwB,MACnCC,GAAeD,EAAAA,EAAAA,QAAwB,MACvCE,GAAWF,EAAAA,EAAAA,QAAwB,MAEnCG,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MAsBjB,OACE,gBAAKC,UAAU,UAAf,UACE,kBAAMC,SAAUpB,GApBuB,SAACqB,GAC1C,IAAMC,GAAO,kBACRD,GADQ,IAEXE,MAAM,EACNC,GAAIC,KAAKC,MAAMC,aAEjBZ,GAASa,EAAAA,EAAAA,IAAQN,IACjBrB,IACAgB,EAAS,QAYiCE,UAAU,eAAlD,WACE,iBAAKA,UAAU,aAAf,WACE,iBAAMA,UAAS,kBAAf,yFACA,SAACU,EAAA,EAAD,CACEhC,OAAQA,EACRC,YAAaA,EACbgC,IAAKjB,EACLlB,SAAUA,EACVe,QAASA,EACTX,UAAWA,EAAU,aACrBgC,UAAW,eAEb,SAACF,EAAA,EAAD,CACEhC,OAAQA,EACRC,YAAaA,EACbgC,IAAKnB,EACLhB,SAAUA,EACVe,QAASA,EACTX,UAAWA,EAAU,SACrBgC,UAAW,QACXC,WA1CS,oCA2CTC,KAAMxB,EAAKL,SAEb,SAACyB,EAAA,EAAD,CACEhC,OAAQA,EACRC,YAAaA,EACbgC,IAAKhB,EACLnB,SAAUA,EACVe,QAASA,EACTX,UAAWA,EAAU,SACrBgC,UAAW,QACX7B,QAASA,KAGX,gBAAKiB,UAAU,YAAf,UACE,uCACMxB,EAAS,UAAW,CAAEuC,UAAU,KADtC,IAEEC,YAAY,6GAIlB,iBAAKhB,UAAU,OAAf,WACE,mBAAQA,UAAU,YAAYiB,QAAS,SAACC,GAAD,OAnD3B,SAACA,GACnBA,EAAEC,kBAEFC,EAAAA,EAAAA,MACAtC,IA+CoDuC,CAAYH,IAA1D,+DAGA,kBAAOI,KAAK,SAAStB,UAAU,wBC/FzC,EARiB,WACf,OACE,0BACE,SAAC,EAAD","sources":["components/Form/Form.tsx","pages/FormPage.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport { useAppDispatch } from '../../store/hooks'\r\nimport { addInfo } from '../../store/slices/userSlice'\r\n\r\nimport { IAuthUser, IUser } from '../types/userType'\r\n\r\nimport InputForm from './InputForm'\r\nimport { removeClasses } from '../../hooks/focusHooks'\r\n\r\nconst Form = () => {\r\n  const {\r\n    register,\r\n    formState: { errors, dirtyFields },\r\n    getValues,\r\n    handleSubmit,\r\n    reset,\r\n    control,\r\n  } = useForm<IAuthUser>({\r\n    defaultValues: {\r\n      theme: undefined,\r\n    },\r\n  })\r\n\r\n  const [user, setUser] = useState<IUser>({\r\n    email: null,\r\n    firstName: null,\r\n    theme: { label: null, value: null },\r\n    message: null,\r\n  })\r\n\r\n  const emailRef = useRef<HTMLSpanElement>(null)\r\n  const firstNameRef = useRef<HTMLSpanElement>(null)\r\n  const themeRef = useRef<HTMLSpanElement>(null)\r\n\r\n  const dispatch = useAppDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const emailRegEx = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\r\n\r\n  const onSubmit: SubmitHandler<IAuthUser> = (data) => {\r\n    const newUser = {\r\n      ...data,\r\n      auth: true,\r\n      id: Date.now().toString(),\r\n    }\r\n    dispatch(addInfo(newUser))\r\n    reset()\r\n    navigate('/')\r\n  }\r\n\r\n  const handleReset = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n\r\n    removeClasses()\r\n    reset()\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <form onSubmit={handleSubmit(onSubmit)} className='form_wrapper'>\r\n        <div className='form_items'>\r\n          <span className={`title form_item`}>Форма для тебя</span>\r\n          <InputForm\r\n            errors={errors}\r\n            dirtyFields={dirtyFields}\r\n            Ref={firstNameRef}\r\n            register={register}\r\n            setUser={setUser}\r\n            getValues={getValues('firstName')}\r\n            userValue={'firstName'}\r\n          />\r\n          <InputForm\r\n            errors={errors}\r\n            dirtyFields={dirtyFields}\r\n            Ref={emailRef}\r\n            register={register}\r\n            setUser={setUser}\r\n            getValues={getValues('email')}\r\n            userValue={'email'}\r\n            emailRegEx={emailRegEx}\r\n            mail={user.email}\r\n          />\r\n          <InputForm\r\n            errors={errors}\r\n            dirtyFields={dirtyFields}\r\n            Ref={themeRef}\r\n            register={register}\r\n            setUser={setUser}\r\n            getValues={getValues('theme')}\r\n            userValue={'theme'}\r\n            control={control}\r\n          />\r\n\r\n          <div className='form_item'>\r\n            <textarea\r\n              {...register('message', { required: false })}\r\n              placeholder='Введите сообщение'></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='btns'>\r\n          <button className='btn_reset' onClick={(e) => handleReset(e)}>\r\n            Сбросить\r\n          </button>\r\n          <input type='submit' className='btn_submit' />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport Form from '../components/Form/Form'\r\n\r\nconst FormPage = () => {\r\n  return (\r\n    <div>\r\n      <Form />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormPage\r\n"],"names":["useForm","defaultValues","theme","undefined","register","formState","errors","dirtyFields","getValues","handleSubmit","reset","control","useState","email","firstName","label","value","message","user","setUser","emailRef","useRef","firstNameRef","themeRef","dispatch","useAppDispatch","navigate","useNavigate","className","onSubmit","data","newUser","auth","id","Date","now","toString","addInfo","InputForm","Ref","userValue","emailRegEx","mail","required","placeholder","onClick","e","preventDefault","removeClasses","handleReset","type"],"sourceRoot":""}